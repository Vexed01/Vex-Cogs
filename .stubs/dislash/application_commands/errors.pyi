"""
This type stub file was generated by pyright.
"""

from discord import DiscordException

class ApplicationCommandError(DiscordException):
    """
    The base exception type for all slash-command related errors.

    This inherits from :exc:`discord.DiscordException`.

    This exception and exceptions inherited from it are handled
    in a special way as they are caught and passed into a special event
    from :class:`.SlashClient`, :func:`on_slash_command_error`.
    """

    def __init__(self, message=..., *args) -> None: ...

class BadArgument(ApplicationCommandError): ...
class InteractionCheckFailure(ApplicationCommandError): ...

class CheckAnyFailure(InteractionCheckFailure):
    def __init__(self, checks, errors) -> None: ...

class PrivateMessageOnly(InteractionCheckFailure):
    def __init__(self, message=...) -> None: ...

class NoPrivateMessage(InteractionCheckFailure):
    def __init__(self, message=...) -> None: ...

class NotOwner(InteractionCheckFailure): ...

class CommandOnCooldown(InteractionCheckFailure):
    """Exception raised when the application command being invoked is on cooldown.

    This inherits from `ApplicationCommandError`

    ## Attributes

    `cooldown`: `Cooldown` (a class with attributes `rate`, `per`, and `type`)

    `retry_after`: `float` (the amount of seconds to wait before you can retry again)
    """

    def __init__(self, cooldown, retry_after) -> None: ...

class NotGuildOwner(ApplicationCommandError): ...

class MissingRole(InteractionCheckFailure):
    def __init__(self, missing_role) -> None: ...

class BotMissingRole(InteractionCheckFailure):
    def __init__(self, missing_role) -> None: ...

class MissingAnyRole(InteractionCheckFailure):
    def __init__(self, missing_roles) -> None: ...

class BotMissingAnyRole(InteractionCheckFailure):
    def __init__(self, missing_roles) -> None: ...

class NSFWChannelRequired(InteractionCheckFailure):
    def __init__(self, channel) -> None: ...

class MissingPermissions(InteractionCheckFailure):
    def __init__(self, missing_perms, *args) -> None: ...

class BotMissingPermissions(InteractionCheckFailure):
    def __init__(self, missing_perms, *args) -> None: ...

SlashCommandError = ApplicationCommandError
SlashCheckFailure = InteractionCheckFailure
